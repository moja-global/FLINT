<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="spinuplandunitcontroller_8cpp" kind="file" language="C++">
    <compoundname>spinuplandunitcontroller.cpp</compoundname>
    <includes refid="spinuplandunitcontroller_8h" local="yes">moja/flint/spinuplandunitcontroller.h</includes>
    <includes refid="flintexceptions_8h" local="yes">moja/flint/flintexceptions.h</includes>
    <includes refid="imodule_8h" local="yes">moja/flint/imodule.h</includes>
    <includes refid="ioperation_8h" local="yes">moja/flint/ioperation.h</includes>
    <includes refid="ivariable_8h" local="yes">moja/flint/ivariable.h</includes>
    <includes refid="landunitcontroller_8h" local="yes">moja/flint/landunitcontroller.h</includes>
    <includes refid="operationmanagerublas_8h" local="yes">moja/flint/operationmanagerublas.h</includes>
    <includes refid="dynamic_8h" local="no">moja/dynamic.h</includes>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <incdepgraph>
      <node id="44">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="18">
        <label>iomanip</label>
      </node>
      <node id="20">
        <label>limits</label>
      </node>
      <node id="32">
        <label>moja/flint/poolcollection.h</label>
        <link refid="poolcollection_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Poco/Dynamic/Var.h</label>
      </node>
      <node id="24">
        <label>moja/flint/imodule.h</label>
        <link refid="imodule_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>boost/exception/all.hpp</label>
      </node>
      <node id="23">
        <label>stdexcept</label>
      </node>
      <node id="1">
        <label>/mnt/e/FLINT/Source/moja.flint/src/spinuplandunitcontroller.cpp</label>
        <link refid="spinuplandunitcontroller_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>moja/flint/spinuplandunitcontroller.h</label>
        <link refid="spinuplandunitcontroller_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="17">
        <label>date/date.h</label>
      </node>
      <node id="12">
        <label>moja/datetime.h</label>
        <link refid="datetime_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>map</label>
      </node>
      <node id="13">
        <label>_core_exports.h</label>
      </node>
      <node id="25">
        <label>moja/flint/ioperation.h</label>
        <link refid="ioperation_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>moja/flint/itiming.h</label>
        <link refid="itiming_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>boost/numeric/ublas/vector.hpp</label>
      </node>
      <node id="10">
        <label>moja/flint/timing.h</label>
        <link refid="timing_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>boost/numeric/ublas/io.hpp</label>
      </node>
      <node id="14">
        <label>moja/timespan.h</label>
        <link refid="timespan_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>moja/flint/matrixublas.h</label>
        <link refid="matrixublas_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>moja/_core_exports.h</label>
      </node>
      <node id="29">
        <label>moja/flint/operationmanagerublas.h</label>
        <link refid="operationmanagerublas_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="5">
        <label>moja/dynamic.h</label>
        <link refid="dynamic_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>moja/flint/landunitcontroller.h</label>
        <link refid="landunitcontroller_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>moja/floatcmp.h</label>
        <link refid="floatcmp_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>moja/flint/ivariable.h</label>
        <link refid="ivariable_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>moja/flint/flintexceptions.h</label>
        <link refid="flintexceptions_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>boost/numeric/ublas/operation.hpp</label>
      </node>
      <node id="4">
        <label>moja/flint/ilandunitcontroller.h</label>
        <link refid="ilandunitcontroller_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>moja/flint/itransform.h</label>
        <link refid="itransform_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>boost/numeric/ublas/banded.hpp</label>
      </node>
      <node id="35">
        <label>boost/math/tools/precision.hpp</label>
      </node>
      <node id="38">
        <label>boost/numeric/ublas/matrix.hpp</label>
      </node>
      <node id="39">
        <label>boost/numeric/ublas/matrix_sparse.hpp</label>
      </node>
      <node id="43">
        <label>moja/exception.h</label>
        <link refid="exception_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>moja/flint/ioperationmanager.h</label>
        <link refid="ioperationmanager_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>Poco/Dynamic/Struct.h</label>
      </node>
      <node id="3">
        <label>moja/flint/_flint_exports.h</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="42">
        <label>moja/flint/operationresultcollection.h</label>
        <link refid="operationresultcollection_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemoja">moja</innernamespace>
    <innernamespace refid="namespacemoja_1_1flint">moja::flint</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;moja/flint/spinuplandunitcontroller.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moja/flint/flintexceptions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moja/flint/imodule.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moja/flint/ioperation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moja/flint/ivariable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moja/flint/landunitcontroller.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moja/flint/operationmanagerublas.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moja/dynamic.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">moja<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">flint<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SpinupLandUnitController::_currentLandUnitControllerId<sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">SpinupLandUnitController::SpinupLandUnitController(LandUnitController&amp;<sp/>landUnitController)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_landUnitController(landUnitController),<sp/>_config(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">SpinupLandUnitController::~SpinupLandUnitController()<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::configure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>configuration::Configuration&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>pointer<sp/>to<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/>_config<sp/>=<sp/>&amp;config;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::run()<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::initialiseData(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inLandUnit)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inLandUnit)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initialisePools();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">std::shared_ptr&lt;IOperation&gt;<sp/>SpinupLandUnitController::createStockOperation(IModule&amp;<sp/>module)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_landUnitController.createStockOperation(module);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">std::shared_ptr&lt;IOperation&gt;<sp/>SpinupLandUnitController::createStockOperation(IModule&amp;<sp/>module,<sp/>DynamicVar&amp;<sp/>dataPackage)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_landUnitController.createStockOperation(module,<sp/>dataPackage);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">std::shared_ptr&lt;IOperation&gt;<sp/>SpinupLandUnitController::createProportionalOperation(IModule&amp;<sp/>module)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_landUnitController.createProportionalOperation(module);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">std::shared_ptr&lt;IOperation&gt;<sp/>SpinupLandUnitController::createProportionalOperation(IModule&amp;<sp/>module,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DynamicVar&amp;<sp/>dataPackage)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_landUnitController.createProportionalOperation(module,<sp/>dataPackage);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::submitOperation(std::shared_ptr&lt;IOperation&gt;<sp/>operation)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>_landUnitController.submitOperation(operation);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::applyOperations()<sp/>{<sp/>_landUnitController.applyOperations();<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::clearLastAppliedOperationResults()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>_landUnitController.clearLastAppliedOperationResults();</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::clearAllOperationResults()<sp/>{<sp/>_landUnitController.clearAllOperationResults();<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::resetVariables()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>variable<sp/>:<sp/>_variablesMap)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>variable.second-&gt;reset_value();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::initialisePools()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>_landUnitController.initialisePools();<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpinupLandUnitController::addVariable(std::string<sp/>name,<sp/>std::shared_ptr&lt;IVariable&gt;<sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.length()<sp/>==<sp/>0<sp/>||<sp/>all(name,<sp/>boost::algorithm::is_space()))<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;name<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>_variablesMap.insert(std::make_pair(name,<sp/>variable));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>_variables.push_back(variable);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">IVariable*<sp/>SpinupLandUnitController::getVariable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>_variablesMap.find(name);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>_variablesMap.end())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_THROW_EXCEPTION(VariableNotFoundException()<sp/>&lt;&lt;<sp/>VariableName(name));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v-&gt;second.get();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IVariable*<sp/>SpinupLandUnitController::getVariable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>_variablesMap.find(name);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>_variablesMap.end())<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_THROW_EXCEPTION(VariableNotFoundException()<sp/>&lt;&lt;<sp/>VariableName(name));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v-&gt;second.get();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SpinupLandUnitController::hasVariable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_variablesMap.find(name)<sp/>!=<sp/>_variablesMap.end();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">ITiming&amp;<sp/>SpinupLandUnitController::timing()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_timing;<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">IOperationManager*<sp/>SpinupLandUnitController::operationManager()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_landUnitController.operationManager();<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">IOperationManager*<sp/>SpinupLandUnitController::operationManager()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_landUnitController.operationManager();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ITiming&amp;<sp/>SpinupLandUnitController::timing()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_timing;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>flint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>moja</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/mnt/e/FLINT/Source/moja.flint/src/spinuplandunitcontroller.cpp"/>
  </compounddef>
</doxygen>
