<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="exception_8h" kind="file" language="C++">
    <compoundname>exception.h</compoundname>
    <includes local="yes">_core_exports.h</includes>
    <includes local="no">stdexcept</includes>
    <includedby refid="aspatiallocaldomaincontroller_8cpp" local="no">/mnt/e/FLINT/Source/moja.flint/src/aspatiallocaldomaincontroller.cpp</includedby>
    <includedby refid="externalvariable_8cpp" local="no">/mnt/e/FLINT/Source/moja.flint/src/externalvariable.cpp</includedby>
    <includedby refid="librarymanager_8cpp" local="no">/mnt/e/FLINT/Source/moja.flint/src/librarymanager.cpp</includedby>
    <includedby refid="operationmanagersimple_8cpp" local="no">/mnt/e/FLINT/Source/moja.flint/src/operationmanagersimple.cpp</includedby>
    <includedby refid="spatialtiledlocaldomaincontroller_8cpp" local="no">/mnt/e/FLINT/Source/moja.flint/src/spatialtiledlocaldomaincontroller.cpp</includedby>
    <includedby refid="sqlquerytransform_8cpp" local="no">/mnt/e/FLINT/Source/moja.flint/src/sqlquerytransform.cpp</includedby>
    <includedby refid="operationmanagersimplecache_8h" local="no">/mnt/e/FLINT/Source/moja.flint/include/moja/flint/operationmanagersimplecache.h</includedby>
    <includedby refid="operationmanagerublas_8h" local="no">/mnt/e/FLINT/Source/moja.flint/include/moja/flint/operationmanagerublas.h</includedby>
    <includedby refid="moja_8cpp" local="yes">/mnt/e/FLINT/Source/moja.cli/src/moja.cpp</includedby>
    <includedby refid="datetime_8cpp" local="yes">/mnt/e/FLINT/Source/moja.core/src/datetime.cpp</includedby>
    <includedby refid="exception_8cpp" local="yes">/mnt/e/FLINT/Source/moja.core/src/exception.cpp</includedby>
    <includedby refid="pocojsonutils_8cpp" local="yes">/mnt/e/FLINT/Source/moja.core/src/pocojsonutils.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdexcept</label>
      </node>
      <node id="2">
        <label>_core_exports.h</label>
      </node>
      <node id="1">
        <label>/mnt/e/FLINT/Source/moja.core/include/moja/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/mnt/e/FLINT/Source/moja.flint/include/moja/flint/operationmanagerublas.h</label>
        <link refid="operationmanagerublas_8h_source"/>
      </node>
      <node id="1">
        <label>/mnt/e/FLINT/Source/moja.core/include/moja/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/mnt/e/FLINT/Source/moja.flint/include/moja/flint/operationmanagersimplecache.h</label>
        <link refid="operationmanagersimplecache_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmoja_1_1Exception" prot="public">moja::Exception</innerclass>
    <innernamespace refid="namespacemoja">moja</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="exception_8h_1a0cd88a2e5c1a8745311f07fb549b5075" prot="public" static="no">
        <name>MOJA_DECLARE_EXCEPTION_CODE</name>
        <param><defname>API</defname></param>
        <param><defname>CLS</defname></param>
        <param><defname>BASE</defname></param>
        <param><defname>CODE</defname></param>
        <initializer>   class API CLS : public BASE {                                                \
     public:                                                                    \
      CLS(int code = CODE);                                                     \
      CLS(const std::string&amp; msg, int code = CODE);                             \
      CLS(const std::string&amp; msg, const std::string&amp; arg, int code = CODE);     \
      CLS(const std::string&amp; msg, const <ref refid="classmoja_1_1Exception" kindref="compound">moja::Exception</ref>&amp; exc, int code = CODE); \
      CLS(const CLS&amp; exc);                                                      \
      ~CLS() throw();                                                           \
      CLS&amp; operator=(const CLS&amp; exc);                                           \
      const char* name() const throw();                                         \
      const char* className() const throw();                                    \
      <ref refid="classmoja_1_1Exception" kindref="compound">moja::Exception</ref>* clone() const;                                           \
      void rethrow() const;                                                     \
   };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/FLINT/Source/moja.core/include/moja/exception.h" line="156" column="9" bodyfile="/mnt/e/FLINT/Source/moja.core/include/moja/exception.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="exception_8h_1abae36a204635d50f6174a809abecf637" prot="public" static="no">
        <name>MOJA_DECLARE_EXCEPTION</name>
        <param><defname>API</defname></param>
        <param><defname>CLS</defname></param>
        <param><defname>BASE</defname></param>
        <initializer>MOJA_DECLARE_EXCEPTION_CODE(API, CLS, BASE, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/FLINT/Source/moja.core/include/moja/exception.h" line="172" column="9" bodyfile="/mnt/e/FLINT/Source/moja.core/include/moja/exception.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="exception_8h_1abec025adf1f4ddb39816ebdea2335ab2" prot="public" static="no">
        <name>MOJA_IMPLEMENT_EXCEPTION</name>
        <param><defname>CLS</defname></param>
        <param><defname>BASE</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>   CLS::CLS(int code) : BASE(code) {}                                                               \
   CLS::CLS(const std::string&amp; msg, int code) : BASE(msg, code) {}                                  \
   CLS::CLS(const std::string&amp; msg, const std::string&amp; arg, int code) : BASE(msg, arg, code) {}     \
   CLS::CLS(const std::string&amp; msg, const <ref refid="classmoja_1_1Exception" kindref="compound">moja::Exception</ref>&amp; exc, int code) : BASE(msg, exc, code) {} \
   CLS::CLS(const CLS&amp; exc) : BASE(exc) {}                                                          \
   CLS::~CLS() throw() {}                                                                           \
   CLS&amp; CLS::operator=(const CLS&amp; exc) {                                                            \
      BASE::operator=(exc);                                                                         \
      return *this;                                                                                 \
   }                                                                                                \
   const char* CLS::name() const throw() { return NAME; }                                           \
   const char* CLS::className() const throw() { return typeid(*this).name(); }                      \
   <ref refid="classmoja_1_1Exception" kindref="compound">moja::Exception</ref>* CLS::clone() const { return new CLS(*this); }                                   \
   void CLS::rethrow() const { throw *this; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/FLINT/Source/moja.core/include/moja/exception.h" line="174" column="9" bodyfile="/mnt/e/FLINT/Source/moja.core/include/moja/exception.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MOJA_CORE_EXCEPTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOJA_CORE_EXCEPTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;_core_exports.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">moja<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classmoja_1_1Exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CORE_API<sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>&amp;<sp/>nested,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>&amp;<sp/>exc);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>()<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>&amp;<sp/>exc);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>className()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>what()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>*<sp/>nested()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>displayText()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>*<sp/>clone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rethrow()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>message(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>extendedMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>_msg;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>*<sp/>_pNested;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_code;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classmoja_1_1Exception_1ad7be4b72dc3aa11eb6c9d08519473be8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>*<sp/><ref refid="classmoja_1_1Exception_1ad7be4b72dc3aa11eb6c9d08519473be8" kindref="member">Exception::nested</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_pNested;<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classmoja_1_1Exception_1ad6df0ac0051e28737ca4dc278985d85f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classmoja_1_1Exception_1ad6df0ac0051e28737ca4dc278985d85f" kindref="member">Exception::message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_msg;<sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classmoja_1_1Exception_1a0914944c5494ab364206938381866091" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1Exception_1ad6df0ac0051e28737ca4dc278985d85f" kindref="member">Exception::message</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>{<sp/>_msg<sp/>=<sp/>msg;<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classmoja_1_1Exception_1a4aebcfaf2368eb240cf5111cc6fc140b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1Exception_1a4aebcfaf2368eb240cf5111cc6fc140b" kindref="member">Exception::code</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_code;<sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros<sp/>for<sp/>quickly<sp/>declaring<sp/>and<sp/>implementing<sp/>exception<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unfortunately,<sp/>we<sp/>cannot<sp/>use<sp/>a<sp/>template<sp/>here<sp/>because<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pointers<sp/>(which<sp/>we<sp/>need<sp/>for<sp/>specifying<sp/>the<sp/>exception<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>not<sp/>allowed<sp/>as<sp/>template<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOJA_DECLARE_EXCEPTION_CODE(API,<sp/>CLS,<sp/>BASE,<sp/>CODE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/>class<sp/>API<sp/>CLS<sp/>:<sp/>public<sp/>BASE<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>CLS(int<sp/>code<sp/>=<sp/>CODE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>CLS(const<sp/>std::string&amp;<sp/>msg,<sp/>int<sp/>code<sp/>=<sp/>CODE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>CLS(const<sp/>std::string&amp;<sp/>msg,<sp/>const<sp/>std::string&amp;<sp/>arg,<sp/>int<sp/>code<sp/>=<sp/>CODE);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>CLS(const<sp/>std::string&amp;<sp/>msg,<sp/>const<sp/>moja::Exception&amp;<sp/>exc,<sp/>int<sp/>code<sp/>=<sp/>CODE);<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>CLS(const<sp/>CLS&amp;<sp/>exc);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>~CLS()<sp/>throw();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>CLS&amp;<sp/>operator=(const<sp/>CLS&amp;<sp/>exc);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>name()<sp/>const<sp/>throw();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>className()<sp/>const<sp/>throw();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>moja::Exception*<sp/>clone()<sp/>const;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>rethrow()<sp/>const;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOJA_DECLARE_EXCEPTION(API,<sp/>CLS,<sp/>BASE)<sp/>MOJA_DECLARE_EXCEPTION_CODE(API,<sp/>CLS,<sp/>BASE,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOJA_IMPLEMENT_EXCEPTION(CLS,<sp/>BASE,<sp/>NAME)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/>CLS::CLS(int<sp/>code)<sp/>:<sp/>BASE(code)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/>CLS::CLS(const<sp/>std::string&amp;<sp/>msg,<sp/>int<sp/>code)<sp/>:<sp/>BASE(msg,<sp/>code)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/>CLS::CLS(const<sp/>std::string&amp;<sp/>msg,<sp/>const<sp/>std::string&amp;<sp/>arg,<sp/>int<sp/>code)<sp/>:<sp/>BASE(msg,<sp/>arg,<sp/>code)<sp/>{}<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/>CLS::CLS(const<sp/>std::string&amp;<sp/>msg,<sp/>const<sp/>moja::Exception&amp;<sp/>exc,<sp/>int<sp/>code)<sp/>:<sp/>BASE(msg,<sp/>exc,<sp/>code)<sp/>{}<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/>CLS::CLS(const<sp/>CLS&amp;<sp/>exc)<sp/>:<sp/>BASE(exc)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/>CLS::~CLS()<sp/>throw()<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/>CLS&amp;<sp/>CLS::operator=(const<sp/>CLS&amp;<sp/>exc)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>BASE::operator=(exc);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>*this;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/>const<sp/>char*<sp/>CLS::name()<sp/>const<sp/>throw()<sp/>{<sp/>return<sp/>NAME;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/>const<sp/>char*<sp/>CLS::className()<sp/>const<sp/>throw()<sp/>{<sp/>return<sp/>typeid(*this).name();<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/>moja::Exception*<sp/>CLS::clone()<sp/>const<sp/>{<sp/>return<sp/>new<sp/>CLS(*this);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/>void<sp/>CLS::rethrow()<sp/>const<sp/>{<sp/>throw<sp/>*this;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>exception<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>LogicException,<sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>AssertionViolationException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>NullPointerException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>NullValueException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>BugcheckException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>InvalidArgumentException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>NotImplementedException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>RangeException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>IllegalStateException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>InvalidAccessException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>SignalException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>UnhandledException,<sp/>LogicException)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>RuntimeException,<sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>NotFoundException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>ExistsException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>TimeoutException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>SystemException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>RegularExpressionException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>LibraryLoadException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>LibraryAlreadyLoadedException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>LibrarySymbolLoadException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>NoThreadAvailableException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>PropertyNotSupportedException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>PoolOverflowException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>NoPermissionException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>OutOfMemoryException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>DataException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>DataFormatException,<sp/>DataException)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>SyntaxException,<sp/>DataException)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>CircularReferenceException,<sp/>DataException)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>PathSyntaxException,<sp/>SyntaxException)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>IOException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>ProtocolException,<sp/>IOException)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>FileException,<sp/>IOException)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>FileExistsException,<sp/>FileException)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>FileNotFoundException,<sp/>FileException)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>PathNotFoundException,<sp/>FileException)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>FileReadOnlyException,<sp/>FileException)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>FileAccessDeniedException,<sp/>FileException)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>CreateFileException,<sp/>FileException)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>OpenFileException,<sp/>FileException)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>WriteFileException,<sp/>FileException)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>ReadFileException,<sp/>FileException)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>UnknownURISchemeException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>ApplicationException,<sp/><ref refid="classmoja_1_1Exception" kindref="compound">Exception</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">MOJA_DECLARE_EXCEPTION(CORE_API,<sp/>BadCastException,<sp/>RuntimeException)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>moja</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>MOJA_CORE_EXCEPTION_H_</highlight></codeline>
    </programlisting>
    <location file="/mnt/e/FLINT/Source/moja.core/include/moja/exception.h"/>
  </compounddef>
</doxygen>
